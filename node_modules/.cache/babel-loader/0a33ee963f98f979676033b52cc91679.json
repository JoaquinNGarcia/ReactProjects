{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport {\n/*React,*/\nuseState, useEffect } from 'react'; // import {\n//     UseThemeContainer\n// } from './styled';\n\nconst UseTheme = (defaultTheme = {\n  mode: 'light'\n}) => {\n  _s();\n\n  const getInitialTheme = () => {\n    const savedTheme = localStorage.getItem('theme');\n    return savedTheme ? JSON.parse(savedTheme) : defaultTheme;\n  };\n\n  const [theme, _setTheme] = useState(getInitialTheme);\n  useEffect(() => {\n    localStorage.setItem('theme', JSON.stringify(theme));\n  }, [theme]);\n  return { ...theme,\n    setTheme: ({\n      setTheme,\n      ...theme\n    }) => _setTheme(theme)\n  };\n};\n\n_s(UseTheme, \"o/nmYv6u58QfJ3PUMpYE3UVyjF4=\");\n\n_c = UseTheme;\nexport default UseTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseTheme\");","map":{"version":3,"sources":["C:/Users/joaqu/react_projects/src/commons/DarkModeButton/UseTheme/main.js"],"names":["useState","useEffect","UseTheme","defaultTheme","mode","getInitialTheme","savedTheme","localStorage","getItem","JSON","parse","theme","_setTheme","setItem","stringify","setTheme"],"mappings":";;AAAA;AAAO;AACCA,QADR,EAEQC,SAFR,QAIK,OAJL,C,CAMA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAG,CACbC,YAAY,GAAG;AACXC,EAAAA,IAAI,EAAE;AADK,CADF,KAIZ;AAAA;;AAED,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,UAAU,GAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,WAAOF,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAH,GAA4BH,YAA7C;AACH,GAHD;;AAKA,QAAM,CAACQ,KAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAACK,eAAD,CAAnC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeH,KAAf,CAA9B;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,SAAO,EACH,GAAGA,KADA;AAEHI,IAAAA,QAAQ,EAAE,CAAC;AAAEA,MAAAA,QAAF;AAAY,SAAGJ;AAAf,KAAD,KAA2BC,SAAS,CAACD,KAAD;AAF3C,GAAP;AAIH,CArBD;;GAAMT,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf","sourcesContent":["import /*React,*/ {\r\n        useState,\r\n        useEffect\r\n    }\r\nfrom 'react';\r\n\r\n// import {\r\n//     UseThemeContainer\r\n// } from './styled';\r\n\r\nconst UseTheme = (\r\n    defaultTheme = {\r\n        mode: 'light'\r\n    }\r\n) => {\r\n\r\n    const getInitialTheme = () => {\r\n        const savedTheme =  localStorage.getItem('theme');\r\n        return savedTheme ? JSON.parse(savedTheme) : defaultTheme;\r\n    }\r\n    \r\n    const [theme, _setTheme] = useState(getInitialTheme);\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem('theme', JSON.stringify(theme));\r\n    }, [theme]);\r\n\r\n    return {\r\n        ...theme,\r\n        setTheme: ({ setTheme, ...theme}) => _setTheme(theme)\r\n    };\r\n};\r\n\r\nexport default UseTheme;"]},"metadata":{},"sourceType":"module"}