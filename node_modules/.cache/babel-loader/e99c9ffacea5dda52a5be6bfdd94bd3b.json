{"ast":null,"code":"/*import {\r\n    all,\r\n    takeEvery,\r\n    takeLatest,\r\n    select\r\n} from 'redux-saga/effects';\r\n\r\nfunction* rootSagas () {\r\n    yield all ([\r\n\t\t//takeEvery(ADD, addToList),\r\n\t\t//takeEvery(DELETE, deleteToList)\r\n    ]);\r\n}\r\n//Las sagas se implementan como funciones generadoras que generan objetos para el middleware redux-saga.\r\n\r\nexport default rootSagas;*/\nimport { put, takeEvery, all, select } from 'redux-saga/effects'; // import {\n// \tsetList,\n// \tdeleteList\n// } from '../app/action';\n\nimport { ADD, DELETE, DELETELIST, SETLIST } from './types';\n\nfunction* addToList(action) {\n  const {\n    list\n  } = yield select();\n  yield put({\n    payload: [...list, action.payload],\n    type: SETLIST\n  }); //yield put(setList([...list, action.payload]));\n}\n\nfunction* deleteToList() {\n  const {\n    list\n  } = yield select();\n  const newList = list.filter((e, index) => index !== list.length - 1);\n  yield put({\n    payload: newList,\n    type: DELETELIST\n  }); //yield put(deleteList(newList));\n} //Ahora solo exporto el punto de entrada rootSaga para iniciar todos los sagas a la vez.\n\n\nexport default function* rootSaga() {\n  yield all([takeEvery(ADD, addToList), takeEvery(DELETE, deleteToList)]);\n} //Las sagas se implementan como funciones generadoras que generan objetos para el middleware redux-saga.","map":{"version":3,"sources":["C:/Users/joaqu/react_projects/src/core/sagas.root.js"],"names":["put","takeEvery","all","select","ADD","DELETE","DELETELIST","SETLIST","addToList","action","list","payload","type","deleteToList","newList","filter","e","index","length","rootSaga"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA2C,oBAA3C,C,CACA;AACA;AACA;AACA;;AACA,SACCC,GADD,EAECC,MAFD,EAGCC,UAHD,EAICC,OAJD,QAKO,SALP;;AAOA,UAAUC,SAAV,CAAoBC,MAApB,EAA4B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMP,MAAM,EAA7B;AACA,QAAMH,GAAG,CAAC;AAAEW,IAAAA,OAAO,EAAE,CAAC,GAAGD,IAAJ,EAAUD,MAAM,CAACE,OAAjB,CAAX;AAAuCC,IAAAA,IAAI,EAAEL;AAA7C,GAAD,CAAT,CAF2B,CAG3B;AACA;;AAED,UAAUM,YAAV,GAAyB;AACxB,QAAM;AAAEH,IAAAA;AAAF,MAAW,MAAMP,MAAM,EAA7B;AACA,QAAMW,OAAO,GAAGJ,IAAI,CAACK,MAAL,CAAY,CAACC,CAAD,EAAIC,KAAJ,KAAcA,KAAK,KAAKP,IAAI,CAACQ,MAAL,GAAY,CAAhD,CAAhB;AACA,QAAMlB,GAAG,CAAC;AAAEW,IAAAA,OAAO,EAAEG,OAAX;AAAoBF,IAAAA,IAAI,EAAEN;AAA1B,GAAD,CAAT,CAHwB,CAIxB;AACA,C,CAED;;;AACA,eAAe,UAAUa,QAAV,GAAqB;AACnC,QAAMjB,GAAG,CAAC,CACTD,SAAS,CAACG,GAAD,EAAMI,SAAN,CADA,EAETP,SAAS,CAACI,MAAD,EAASQ,YAAT,CAFA,CAAD,CAAT;AAIA,C,CACD","sourcesContent":["/*import {\r\n    all,\r\n    takeEvery,\r\n    takeLatest,\r\n    select\r\n} from 'redux-saga/effects';\r\n\r\nfunction* rootSagas () {\r\n    yield all ([\r\n\t\t//takeEvery(ADD, addToList),\r\n\t\t//takeEvery(DELETE, deleteToList)\r\n    ]);\r\n}\r\n//Las sagas se implementan como funciones generadoras que generan objetos para el middleware redux-saga.\r\n\r\nexport default rootSagas;*/\r\n\r\nimport { put, takeEvery, all, select} from 'redux-saga/effects'\r\n// import {\r\n// \tsetList,\r\n// \tdeleteList\r\n// } from '../app/action';\r\nimport {\r\n\tADD,\r\n\tDELETE,\r\n\tDELETELIST,\r\n\tSETLIST\r\n} from './types'\r\n\r\nfunction* addToList(action) {\r\n\tconst { list } = yield select();\r\n\tyield put({ payload: [...list, action.payload] , type: SETLIST });\r\n\t//yield put(setList([...list, action.payload]));\r\n}\r\n\r\nfunction* deleteToList() {\r\n\tconst { list } = yield select();\r\n\tconst newList = list.filter((e, index) => index !== list.length-1);\r\n\tyield put({ payload: newList, type: DELETELIST })\r\n\t//yield put(deleteList(newList));\r\n}\r\n\r\n//Ahora solo exporto el punto de entrada rootSaga para iniciar todos los sagas a la vez.\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\ttakeEvery(ADD, addToList),\r\n\t\ttakeEvery(DELETE, deleteToList)\r\n\t]);\r\n}\r\n//Las sagas se implementan como funciones generadoras que generan objetos para el middleware redux-saga.\r\n"]},"metadata":{},"sourceType":"module"}