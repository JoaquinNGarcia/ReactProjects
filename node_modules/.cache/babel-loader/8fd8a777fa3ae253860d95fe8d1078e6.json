{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\joaqu\\\\react_projects\\\\src\\\\views\\\\containers\\\\GithubList\\\\main.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react'; // import {\n// } from 'prop-types';\n\nimport { GithubListCard, GithubListCardContent, GithubListContainer, GithubListSearch, Header, Input, Text } from './styled';\nimport Image from '../../components/Image/main';\nimport NavBarH from '../../../commons/NavBarH/main';\nimport SearchButton from '../../../commons/SearchButton/main';\n\nconst GithubList = ({\n  setGitHubInfo\n}) => {\n  _s();\n\n  const [avatar, setAvatar] = useState('');\n  const [error, setError] = useState(null);\n  const [followers, setFollowers] = useState('');\n  const [following, setFollowing] = useState('');\n  const [id, setID] = useState('');\n  const [name, setName] = useState('');\n  const [notification, setNotification] = useState('');\n  const [repos, setRepos] = useState('');\n  const [searchText, setSearchText] = useState('');\n  const [service, setService] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [userName, setUserName] = useState('');\n\n  const handleSearch = ({\n    target: {\n      value\n    }\n  }) => {\n    setUserInput(value);\n    userInput.length < 3 ? setSearchText('Ingrese 4 caracteres como minimo.') : setSearchText('');\n  };\n\n  const handleSubmit = () => {\n    !searchText && userInput !== 'osana-salud' && fetch(`https://api.github.com/users/${userInput}`).then(res => res.json()).then(data => {\n      if (data.message) setError(data.message);else {\n        setData(data);\n        setError(null);\n      }\n    });\n    userInput === 'osana-salud' ? setNotification('No se permite realizar esta bÃºsqueda.') : setNotification('');\n  };\n\n  const setData = ({\n    avatar_url,\n    followers,\n    following,\n    html_url,\n    id,\n    login,\n    name,\n    public_repos\n  }) => {\n    setAvatar(avatar_url);\n    setFollowers(followers);\n    setFollowing(following);\n    setID(id);\n    setName(name);\n    setRepos(public_repos);\n    setService(html_url);\n    setUserName(login);\n  };\n\n  let styleButton = \"#000000\";\n  let styleColor = \"#FFFFFF\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBarH, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GithubListContainer, {\n      children: [/*#__PURE__*/_jsxDEV(GithubListSearch, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"GitHub user\",\n          onChange: handleSearch,\n          placeholder: \"GitHub user\",\n          type: \"text\",\n          value: userInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SearchButton, {\n          backgroundColor: styleButton,\n          color: styleColor,\n          handleOnClick: handleSubmit,\n          text: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), searchText && /*#__PURE__*/_jsxDEV(Text, {\n        children: [\" \", searchText, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 35\n      }, this), notification && /*#__PURE__*/_jsxDEV(Text, {\n        children: [\" \", notification, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 37\n      }, this), error ? /*#__PURE__*/_jsxDEV(Text, {\n        children: [\" \", error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }, this) : !!avatar && /*#__PURE__*/_jsxDEV(GithubListCard, {\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          src: !!avatar ? avatar : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(GithubListCardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: [\"- Nombre: \", !!name ? name : 'n/d']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            children: [\"- ID: \", !!id ? id : 'n/d']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            children: [\"- Nombre de usuario: \", !!userName ? userName : 'n/d']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            children: [\"- Servicio al que corresponde: \", !!service ? service : 'n/d']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(GithubListCardContent, {\n          children: [\"- \", followers, \" Seguidores\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(GithubListCardContent, {\n          children: [\"- \", repos, \" Repositorios\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(GithubListCardContent, {\n          children: [\"- \", following, \" Amigos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}; // GithubList.propTypes = {\n// };\n\n\n_s(GithubList, \"z5kGobXT+b+Jj1b+Rbfqb/UmCo8=\");\n\n_c = GithubList;\nexport default GithubList;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubList\");","map":{"version":3,"sources":["C:/Users/joaqu/react_projects/src/views/containers/GithubList/main.js"],"names":["React","Fragment","useState","GithubListCard","GithubListCardContent","GithubListContainer","GithubListSearch","Header","Input","Text","Image","NavBarH","SearchButton","GithubList","setGitHubInfo","avatar","setAvatar","error","setError","followers","setFollowers","following","setFollowing","id","setID","name","setName","notification","setNotification","repos","setRepos","searchText","setSearchText","service","setService","userInput","setUserInput","userName","setUserName","handleSearch","target","value","length","handleSubmit","fetch","then","res","json","data","message","setData","avatar_url","html_url","login","public_repos","styleButton","styleColor"],"mappings":"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","sourcesContent":["import React, {\r\n    Fragment,\r\n    useState\r\n} from 'react';\r\n// import {\r\n\r\n// } from 'prop-types';\r\nimport {\r\n    GithubListCard,\r\n    GithubListCardContent,\r\n    GithubListContainer,\r\n    GithubListSearch,\r\n    Header,\r\n    Input,\r\n    Text\r\n} from './styled';\r\nimport Image from '../../components/Image/main';\r\nimport NavBarH from '../../../commons/NavBarH/main';\r\nimport SearchButton from '../../../commons/SearchButton/main';\r\n\r\nconst GithubList = ({\r\n    setGitHubInfo\r\n}) => {\r\n\r\n    const [avatar, setAvatar] = useState('');\r\n    const [error, setError] = useState(null);\r\n    const [followers, setFollowers] = useState('');\r\n    const [following, setFollowing] = useState('');\r\n    const [id, setID] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [notification, setNotification] = useState('');\r\n    const [repos, setRepos] = useState('');\r\n    const [searchText, setSearchText] = useState('');\r\n    const [service, setService] = useState('');\r\n    const [userInput, setUserInput] = useState('');\r\n    const [userName, setUserName] = useState('');\r\n\r\n    const handleSearch = ({target: { value } }) => {\r\n        setUserInput(value);\r\n        userInput.length < 3 ? setSearchText('Ingrese 4 caracteres como minimo.') : setSearchText('')\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        !searchText && userInput !== 'osana-salud' && (\r\n                fetch(`https://api.github.com/users/${userInput}`)\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        if (data.message)\r\n                            setError(data.message) \r\n                        else { \r\n                            setData(data);\r\n                            setError(null);\r\n                        }\r\n                })\r\n            )\r\n        userInput === 'osana-salud' ? setNotification('No se permite realizar esta bÃºsqueda.') : setNotification('')\r\n    }\r\n\r\n    const setData = ({\r\n        avatar_url,\r\n        followers,\r\n        following,\r\n        html_url,\r\n        id,\r\n        login,\r\n        name,\r\n        public_repos\r\n    }) => {\r\n        setAvatar(avatar_url);\r\n        setFollowers(followers);\r\n        setFollowing(following);\r\n        setID(id);\r\n        setName(name);\r\n        setRepos(public_repos);\r\n        setService(html_url);\r\n        setUserName(login);\r\n    }\r\n\r\n    let styleButton = \"#000000\";\r\n    let styleColor = \"#FFFFFF\";\r\n\r\n    return (\r\n        <Fragment>\r\n            <NavBarH/>\r\n            <GithubListContainer>\r\n                <GithubListSearch>\r\n                    <Input\r\n                        name=\"GitHub user\"\r\n                        onChange={ handleSearch }\r\n                        placeholder=\"GitHub user\"\r\n                        type=\"text\"\r\n                        value={ userInput }\r\n                    />\r\n                    <SearchButton\r\n                        backgroundColor={ styleButton }\r\n                        color={ styleColor }\r\n                        handleOnClick={ handleSubmit }\r\n                        text=\"Search\"\r\n                    />\r\n                </GithubListSearch>\r\n                { searchText && ( <Text> { searchText } </Text> )}\r\n                { notification && ( <Text> { notification } </Text> ) }\r\n                { error\r\n                    ? ( <Text> { error } </Text> )\r\n                    : !!avatar &&\r\n                        (\r\n                            <GithubListCard>\r\n                                <Image\r\n                                    src={ !!avatar ? avatar : '' }\r\n                                />\r\n                                <GithubListCardContent>\r\n                                    <Header>\r\n                                        - Nombre: { !!name ? name : 'n/d' }\r\n                                    </Header>\r\n                                    <Header>\r\n                                        - ID: { !!id ? id : 'n/d' }\r\n                                    </Header>\r\n                                    <Header>\r\n                                        - Nombre de usuario: { !!userName ? userName : 'n/d' }\r\n                                    </Header>\r\n                                    <Header>\r\n                                        - Servicio al que corresponde: { !!service ? service : 'n/d' }\r\n                                    </Header>\r\n                                </GithubListCardContent> \r\n                                <GithubListCardContent>\r\n                                    - { followers } Seguidores\r\n                                </GithubListCardContent>\r\n                                <GithubListCardContent>\r\n                                    - { repos } Repositorios\r\n                                </GithubListCardContent>\r\n                                <GithubListCardContent>\r\n                                    - { following } Amigos\r\n                                </GithubListCardContent>\r\n                            </GithubListCard>\r\n                        )                  \r\n                }\r\n            </GithubListContainer>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n// GithubList.propTypes = {\r\n\r\n// };\r\n\r\nexport default GithubList;\r\n"]},"metadata":{},"sourceType":"module"}