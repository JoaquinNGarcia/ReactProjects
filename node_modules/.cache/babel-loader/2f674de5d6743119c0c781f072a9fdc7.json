{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\joaqu\\\\react_projects\\\\src\\\\app\\\\main.js\";\nimport React from 'react'; // import {\n// } from 'prop-types';\n\nimport { BrowserRouter as Router, Redirect, Switch, Route } from 'react-router-dom';\nimport CarList from '../views/containers/CarList/main';\nimport Catalogue from '../views/containers/Catalogue/main';\nimport Dashboard from '../views/containers/Dashboard';\nimport Device from '../views/containers/Device/main';\nimport Documents from '../views/containers/Documents/main';\nimport GithubList from '../views/containers/GithubList/main';\nimport LandingPage from '../views/containers/LandingPage/main';\nimport Login from '../views/containers/Login/main';\nimport NotFound from '../views/containers/NotFound/main';\nimport Statistics from '../views/containers/Statistics/main';\nimport Weather from '../views/containers/Weather/main'; // import { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\n// import { isEmpty } from 'lodash';\n// import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\n// const locationHelper = locationHelperBuilder({});\n// const userIsAuthenticated = connectedRouterRedirect({\n// \tredirectPath: (state, props) =>  locationHelper.getRedirectQueryParam(props) || '/dashboard',\n// \tallowRedirectBack: false,\n// \tauthenticatedSelector: ({ user }) => isEmpty(user)\n// })\n// const userIsNotAuthenticated = connectedRouterRedirect({\n// \tredirectPath: '/login',\n// \tallowRedirectBack: true,\n// \tauthenticatedSelector: ({ user }) => !isEmpty(user)\n// })\n// {console.log('userIsNotAuthenticated', userIsNotAuthenticated)}\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\" // component={ userIsAuthenticated(Login) }\n          ,\n          component: Login\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\" // component={ userIsNotAuthenticated(Dashboard) }\n          ,\n          component: Dashboard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/landingPage\",\n          component: LandingPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/carList\",\n          component: CarList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/statistics\",\n          component: Statistics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/catalogue\",\n          component: Catalogue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/weather\",\n          component: Weather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/device\",\n          component: Device\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/documents\",\n          component: Documents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/notFound\",\n          component: NotFound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/githubList\",\n          component: GithubList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/landingPage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/joaqu/react_projects/src/app/main.js"],"names":["React","BrowserRouter","Router","Redirect","Switch","Route","CarList","Catalogue","Dashboard","Device","Documents","GithubList","LandingPage","Login","NotFound","Statistics","Weather","App"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AAEA;;AACA,SACCC,aAAa,IAAIC,MADlB,EAECC,QAFD,EAGCC,MAHD,EAICC,KAJD,QAKO,kBALP;AAMA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,OAAP,MAAoB,kCAApB,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AACjB,sBACC;AAAA,2BACC,QAAC,MAAD;AAAA,6BACC,QAAC,MAAD;AAAA,gCACC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,QADN,CAEC;AAFD;AAGC,UAAA,SAAS,EAAGJ;AAHb;AAAA;AAAA;AAAA;AAAA,gBADD,eAMC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,YADN,CAEC;AAFD;AAGC,UAAA,SAAS,EAAGL;AAHb;AAAA;AAAA;AAAA;AAAA,gBAND,eAWC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,cADN;AAEC,UAAA,SAAS,EAAGI;AAFb;AAAA;AAAA;AAAA;AAAA,gBAXD,eAeC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,SAAS,EAAGN;AAFb;AAAA;AAAA;AAAA;AAAA,gBAfD,eAmBC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,aADN;AAEC,UAAA,SAAS,EAAGS;AAFb;AAAA;AAAA;AAAA;AAAA,gBAnBD,eAuBC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,YADN;AAEC,UAAA,SAAS,EAAGR;AAFb;AAAA;AAAA;AAAA;AAAA,gBAvBD,eA2BC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,SAAS,EAAGS;AAFb;AAAA;AAAA;AAAA;AAAA,gBA3BD,eA+BC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,SADN;AAEC,UAAA,SAAS,EAAGP;AAFb;AAAA;AAAA;AAAA;AAAA,gBA/BD,eAmCC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,YADN;AAEC,UAAA,SAAS,EAAGC;AAFb;AAAA;AAAA;AAAA;AAAA,gBAnCD,eAuCC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,WADN;AAEC,UAAA,SAAS,EAAGI;AAFb;AAAA;AAAA;AAAA;AAAA,gBAvCD,eA2CC,QAAC,KAAD;AACC,UAAA,IAAI,EAAC,aADN;AAEC,UAAA,SAAS,EAAGH;AAFb;AAAA;AAAA;AAAA;AAAA,gBA3CD,eAqDC,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBArDD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AA8FA,CA/FD;;KAAMM,G;AAiGN,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\n// import {\r\n\r\n// } from 'prop-types';\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRedirect,\r\n\tSwitch,\r\n\tRoute\r\n} from 'react-router-dom';\r\nimport CarList from '../views/containers/CarList/main';\r\nimport Catalogue from '../views/containers/Catalogue/main';\r\nimport Dashboard from '../views/containers/Dashboard';\r\nimport Device from '../views/containers/Device/main';\r\nimport Documents from '../views/containers/Documents/main';\r\nimport GithubList from '../views/containers/GithubList/main';\r\nimport LandingPage from '../views/containers/LandingPage/main';\r\nimport Login from '../views/containers/Login/main';\r\nimport NotFound from '../views/containers/NotFound/main';\r\nimport Statistics from '../views/containers/Statistics/main';\r\nimport Weather from '../views/containers/Weather/main';\r\n\r\n// import { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\r\n// import { isEmpty } from 'lodash';\r\n// import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\r\n// const locationHelper = locationHelperBuilder({});\r\n\r\n// const userIsAuthenticated = connectedRouterRedirect({\r\n// \tredirectPath: (state, props) =>  locationHelper.getRedirectQueryParam(props) || '/dashboard',\r\n// \tallowRedirectBack: false,\r\n// \tauthenticatedSelector: ({ user }) => isEmpty(user)\r\n// })\r\n\r\n// const userIsNotAuthenticated = connectedRouterRedirect({\r\n// \tredirectPath: '/login',\r\n// \tallowRedirectBack: true,\r\n// \tauthenticatedSelector: ({ user }) => !isEmpty(user)\r\n// })\r\n// {console.log('userIsNotAuthenticated', userIsNotAuthenticated)}\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath='/login'\r\n\t\t\t\t\t\t// component={ userIsAuthenticated(Login) }\r\n\t\t\t\t\t\tcomponent={ Login }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route\r\n\t\t\t\t\t\tpath='/dashboard'\r\n\t\t\t\t\t\t// component={ userIsNotAuthenticated(Dashboard) }\r\n\t\t\t\t\t\tcomponent={ Dashboard }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/landingPage'\r\n\t\t\t\t\t\tcomponent={ LandingPage }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/carList'\r\n\t\t\t\t\t\tcomponent={ CarList }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/statistics'\r\n\t\t\t\t\t\tcomponent={ Statistics }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/catalogue'\r\n\t\t\t\t\t\tcomponent={ Catalogue }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/weather'\r\n\t\t\t\t\t\tcomponent={ Weather }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/device'\r\n\t\t\t\t\t\tcomponent={ Device }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/documents'\r\n\t\t\t\t\t\tcomponent={ Documents }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/notFound'\r\n\t\t\t\t\t\tcomponent={ NotFound }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Route \r\n\t\t\t\t\t\tpath='/githubList'\r\n\t\t\t\t\t\tcomponent={ GithubList }\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* Puedo elegir si quiero informar que ese path no existe (opcion 1) o puedo redirigir al path que yo desee (opcion 2) */}\r\n\t\t\t\t\t{/* Opcion 1 */}\r\n\t\t\t\t\t{/* <Route\r\n\t\t\t\t\t\tcomponent={ NotFound }\r\n\t\t\t\t\t/> */}\r\n\t\t\t\t\t{/* Opcion 2 */}\r\n\t\t\t\t\t<Redirect to='/landingPage'/>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t{/*\r\n\t\t\tPara hacer un menu con botones que lleven a los proyectos:\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => history.push('/Login')}\r\n\t\t\t>\r\n\t\t\t\tLogin\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => history.push('/Catalogue')}\r\n\t\t\t>\r\n\t\t\t\tCatalogue\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => history.push('/Dashboard')}\r\n\t\t\t>\r\n\t\t\t\tDashboard\r\n\t\t\t</button>\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => history.goBack()}\r\n\t\t\t>\r\n\t\t\t\tGo back\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t\t<button\r\n\t\t\t\tonClick={() => history.goForward()}\r\n\t\t\t>\r\n\t\t\t\tGo forward\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t*/}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}