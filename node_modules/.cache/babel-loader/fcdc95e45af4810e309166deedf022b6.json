{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\joaqu\\\\react_projects\\\\src\\\\index.js\";\n// import * as serviceWorker from './serviceWorker';\n//import GithubList from '../views/containers/GithubList/main';\nimport App from './app';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom'; // import reducer from '../core/GitHubInfo/reducer';\n// import createSagaMiddleware from 'redux-saga';\n// import reducer from '../core/GitHubInfo/reducer';\n// import rootSaga from '../core/GitHubInfo/saga';\n\nimport { createStore, applyMiddleware } from 'redux'; //applyMiddleware: conecta el middleware al store.\n\nimport rootReducer from './core/reducer.root';\nimport createSagaMiddleware from 'redux-saga'; //creo un middleware\n\nimport rootSaga from './core/sagas.root'; //import Error404 from './views/containers/Error404';\n//import { ReduxSaga } from './ReduxSaga'; //Dudoso, borrar\n//import { store } from './core/store.config';\n//import './index.css';\n//import * as serviceWorker from './serviceWorker';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware)); //const action = (type, payload) => store.dispatch({ type, payload })\n\nsagaMiddleware.run(rootSaga); //Comienza el saga.\n\nfunction render() {\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this), document.getElementById('root'));\n}\n\nrender();\nstore.subscribe(render); // registerServiceWorker();","map":{"version":3,"sources":["C:/Users/joaqu/react_projects/src/index.js"],"names":["App","ConnectedRouter","Provider","React","ReactDOM","BrowserRouter","Redirect","Route","Switch","createStore","applyMiddleware","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","store","run","render","document","getElementById","subscribe"],"mappings":";;AAAA;AACA;AAEA,OAAOA,GAAP,MAAgB,OAAhB;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SACCC,aADD,EAECC,QAFD,EAGCC,KAHD,EAICC,MAJD,QAKO,kBALP,C,CAOA;AACA;AACA;AACA;;AAEA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CAAsD;;AACtD,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CAA+C;;AAC/C,OAAOC,QAAP,MAAqB,mBAArB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AACA,MAAMG,KAAK,GAAGN,WAAW,CAACE,WAAD,EAAcD,eAAe,CAACI,cAAD,CAA7B,CAAzB,C,CACA;;AACAA,cAAc,CAACE,GAAf,CAAmBH,QAAnB,E,CAA8B;;AAE9B,SAASI,MAAT,GAAkB;AACjBb,EAAAA,QAAQ,CAACa,MAAT,eACC,QAAC,QAAD;AAAU,IAAA,KAAK,EAAGF,KAAlB;AAAA,2BACC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD,EAICG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJD;AAMA;;AAEDF,MAAM;AACNF,KAAK,CAACK,SAAN,CAAgBH,MAAhB,E,CACA","sourcesContent":["// import * as serviceWorker from './serviceWorker';\n//import GithubList from '../views/containers/GithubList/main';\n\nimport App from './app';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n\tBrowserRouter,\n\tRedirect,\n\tRoute,\n\tSwitch\n} from 'react-router-dom';\n\n// import reducer from '../core/GitHubInfo/reducer';\n// import createSagaMiddleware from 'redux-saga';\n// import reducer from '../core/GitHubInfo/reducer';\n// import rootSaga from '../core/GitHubInfo/saga';\n\nimport { createStore, applyMiddleware } from 'redux'; //applyMiddleware: conecta el middleware al store.\nimport rootReducer from './core/reducer.root';\nimport createSagaMiddleware from 'redux-saga'; //creo un middleware\nimport rootSaga from './core/sagas.root';\n\n//import Error404 from './views/containers/Error404';\n//import { ReduxSaga } from './ReduxSaga'; //Dudoso, borrar\n//import { store } from './core/store.config';\n//import './index.css';\n//import * as serviceWorker from './serviceWorker';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n//const action = (type, payload) => store.dispatch({ type, payload })\nsagaMiddleware.run(rootSaga); //Comienza el saga.\n\nfunction render() {\n\tReactDOM.render(\n\t\t<Provider store={ store }>\n\t\t\t<App/>\n\t\t</Provider>,\n\t\tdocument.getElementById('root')\n\t);\n}\n\nrender()\nstore.subscribe(render)\n// registerServiceWorker();\n"]},"metadata":{},"sourceType":"module"}